# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle


image: openjdk:17-jdk

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"
  CMAKE:               "3.10.2.4988404"

before_script:
  # - sudo aptâˆ’get update
  # - apt-get --quiet update --yes
  # - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  # - echo y | android-sdk-linux/tools/bin/sdkmanager  "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  # - echo y | android-sdk-linux/tools/bin/sdkmanager  "platform-tools" >/dev/null
  # - echo y | android-sdk-linux/tools/bin/sdkmanager  "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  # - echo y | android-sdk-linux/tools/bin/sdkmanager  "ndk-bundle" >/dev/null
  # - echo y | android-sdk-linux/tools/bin/sdkmanager  "cmake;${CMAKE}" >/dev/null
  
  - export ANDROID_HOME=$PWD/android-sdk-linux/
  - export CMAKE_HOME=$PWD/android-sdk-linux/cmake/${CMAKE}/bin/
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/:$CMAKE_HOME

  - chmod +x ./gradlew
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

build:
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
    - app/build/outputs/

lint:
  stage: test
  script:
    - ./gradlew -Pci --console=plain lintDebug -PbuildDir=lint

unitTest:
  stage: test
  script:
    - ./gradlew -Pci --console=plain testDebug

instrumentationTest:
  stage: test
  script:
    - echo y | android-sdk-linux/tools/bin/sdkmanager  "emulator" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "system-images;android-${ANDROID_COMPILE_SDK};google_apis;x86"
    - echo y | android-sdk-linux/tools/bin/avdmanager create avd -f -n testAVD -k "system-images;android-${ANDROID_COMPILE_SDK};google_apis;x86"
    - android-sdk-linux/emulator/emulator -avd testAVD -no-audio -no-window &
    - ./gradlew connectedAndroidTest
